// Generated by CoffeeScript 1.9.3
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Bucketlist = (function(superClass) {
    extend(Bucketlist, superClass);

    function Bucketlist() {
      return Bucketlist.__super__.constructor.apply(this, arguments);
    }

    Bucketlist.prototype.model = Goal;

    Bucketlist.prototype.initialize = function() {
      this.set('goalCount', this.getGoalCount());
      this.set('goalsAccomplishedCount', this.getGoalsAccomplishedCount());
      if (!window.localStorage.getItem('myBucketlist')) {
        window.localStorage.setItem('myBucketlist', JSON.stringify(this));
      }
      return this.on('add', function() {
        window.localStorage.setItem('myBucketlist', JSON.stringify(this));
      });
    };

    Bucketlist.prototype.getGoalCount = function() {};

    Bucketlist.prototype.getGoalsAccomplishedCount = function() {};

    return Bucketlist;

  })(Backbone.Collection);

}).call(this);

//# sourceMappingURL=bucketlist.js.map
